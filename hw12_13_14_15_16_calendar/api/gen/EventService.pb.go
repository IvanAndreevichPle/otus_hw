//go:generate protoc --go_out=../gen --go-grpc_out=../gen --go_opt=paths=source_relative --go-grpc_opt=paths=source_relative EventService.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: EventService.proto

package event

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event — основная сущность календаря
type Event struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 // UUID события
	Title               string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                           // Заголовок
	StartTime           string                 `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                  // Дата и время начала (RFC3339)
	DurationSeconds     int64                  `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`               // Длительность в секундах
	Description         string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                               // Описание (опционально)
	UserId              string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                           // ID пользователя
	NotifyBeforeMinutes int32                  `protobuf:"varint,7,opt,name=notify_before_minutes,json=notifyBeforeMinutes,proto3" json:"notify_before_minutes,omitempty"` // За сколько минут уведомлять (опционально)
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_EventService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Event) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetNotifyBeforeMinutes() int32 {
	if x != nil {
		return x.NotifyBeforeMinutes
	}
	return 0
}

// Запрос на создание события
type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_EventService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Ответ с созданным событием
type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_EventService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Запрос на обновление события
type UpdateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_EventService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateEventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Ответ на обновление события
type UpdateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventResponse) Reset() {
	*x = UpdateEventResponse{}
	mi := &file_EventService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventResponse) ProtoMessage() {}

func (x *UpdateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Запрос на удаление события
type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_EventService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Ответ на удаление события
type DeleteEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventResponse) Reset() {
	*x = DeleteEventResponse{}
	mi := &file_EventService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventResponse) ProtoMessage() {}

func (x *DeleteEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на получение событий за период
type ListEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PeriodStart   string                 `protobuf:"bytes,2,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"` // начало периода (RFC3339)
	PeriodEnd     string                 `protobuf:"bytes,3,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`       // конец периода (RFC3339)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_EventService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{7}
}

func (x *ListEventsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListEventsRequest) GetPeriodStart() string {
	if x != nil {
		return x.PeriodStart
	}
	return ""
}

func (x *ListEventsRequest) GetPeriodEnd() string {
	if x != nil {
		return x.PeriodEnd
	}
	return ""
}

// Ответ со списком событий
type ListEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_EventService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EventService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_EventService_proto_rawDescGZIP(), []int{8}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_EventService_proto protoreflect.FileDescriptor

const file_EventService_proto_rawDesc = "" +
	"\n" +
	"\x12EventService.proto\x12\x05event\x1a\x1cgoogle/api/annotations.proto\"\xe6\x01\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12)\n" +
	"\x10duration_seconds\x18\x04 \x01(\x03R\x0fdurationSeconds\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x122\n" +
	"\x15notify_before_minutes\x18\a \x01(\x05R\x13notifyBeforeMinutes\"8\n" +
	"\x12CreateEventRequest\x12\"\n" +
	"\x05event\x18\x01 \x01(\v2\f.event.EventR\x05event\"9\n" +
	"\x13CreateEventResponse\x12\"\n" +
	"\x05event\x18\x01 \x01(\v2\f.event.EventR\x05event\"8\n" +
	"\x12UpdateEventRequest\x12\"\n" +
	"\x05event\x18\x01 \x01(\v2\f.event.EventR\x05event\"9\n" +
	"\x13UpdateEventResponse\x12\"\n" +
	"\x05event\x18\x01 \x01(\v2\f.event.EventR\x05event\"=\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"/\n" +
	"\x13DeleteEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"n\n" +
	"\x11ListEventsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fperiod_start\x18\x02 \x01(\tR\vperiodStart\x12\x1d\n" +
	"\n" +
	"period_end\x18\x03 \x01(\tR\tperiodEnd\":\n" +
	"\x12ListEventsResponse\x12$\n" +
	"\x06events\x18\x01 \x03(\v2\f.event.EventR\x06events2\xe3\x04\n" +
	"\fEventService\x12_\n" +
	"\vCreateEvent\x12\x19.event.CreateEventRequest\x1a\x1a.event.CreateEventResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x05event\"\n" +
	"/v1/events\x12j\n" +
	"\vUpdateEvent\x12\x19.event.UpdateEventRequest\x1a\x1a.event.UpdateEventResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x05event\x1a\x15/v1/events/{event.id}\x12]\n" +
	"\vDeleteEvent\x12\x19.event.DeleteEventRequest\x1a\x1a.event.DeleteEventResponse\"\x17\x82\xd3\xe4\x93\x02\x11*\x0f/v1/events/{id}\x12_\n" +
	"\x10ListEventsForDay\x12\x18.event.ListEventsRequest\x1a\x19.event.ListEventsResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/events/day\x12a\n" +
	"\x11ListEventsForWeek\x12\x18.event.ListEventsRequest\x1a\x19.event.ListEventsResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/events/week\x12c\n" +
	"\x12ListEventsForMonth\x12\x18.event.ListEventsRequest\x1a\x19.event.ListEventsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/events/monthBFZDgithub.com/IvanAndreevichPle/hw12_13_14_15_16_calendar/api/gen;eventb\x06proto3"

var (
	file_EventService_proto_rawDescOnce sync.Once
	file_EventService_proto_rawDescData []byte
)

func file_EventService_proto_rawDescGZIP() []byte {
	file_EventService_proto_rawDescOnce.Do(func() {
		file_EventService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_EventService_proto_rawDesc), len(file_EventService_proto_rawDesc)))
	})
	return file_EventService_proto_rawDescData
}

var file_EventService_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_EventService_proto_goTypes = []any{
	(*Event)(nil),               // 0: event.Event
	(*CreateEventRequest)(nil),  // 1: event.CreateEventRequest
	(*CreateEventResponse)(nil), // 2: event.CreateEventResponse
	(*UpdateEventRequest)(nil),  // 3: event.UpdateEventRequest
	(*UpdateEventResponse)(nil), // 4: event.UpdateEventResponse
	(*DeleteEventRequest)(nil),  // 5: event.DeleteEventRequest
	(*DeleteEventResponse)(nil), // 6: event.DeleteEventResponse
	(*ListEventsRequest)(nil),   // 7: event.ListEventsRequest
	(*ListEventsResponse)(nil),  // 8: event.ListEventsResponse
}
var file_EventService_proto_depIdxs = []int32{
	0,  // 0: event.CreateEventRequest.event:type_name -> event.Event
	0,  // 1: event.CreateEventResponse.event:type_name -> event.Event
	0,  // 2: event.UpdateEventRequest.event:type_name -> event.Event
	0,  // 3: event.UpdateEventResponse.event:type_name -> event.Event
	0,  // 4: event.ListEventsResponse.events:type_name -> event.Event
	1,  // 5: event.EventService.CreateEvent:input_type -> event.CreateEventRequest
	3,  // 6: event.EventService.UpdateEvent:input_type -> event.UpdateEventRequest
	5,  // 7: event.EventService.DeleteEvent:input_type -> event.DeleteEventRequest
	7,  // 8: event.EventService.ListEventsForDay:input_type -> event.ListEventsRequest
	7,  // 9: event.EventService.ListEventsForWeek:input_type -> event.ListEventsRequest
	7,  // 10: event.EventService.ListEventsForMonth:input_type -> event.ListEventsRequest
	2,  // 11: event.EventService.CreateEvent:output_type -> event.CreateEventResponse
	4,  // 12: event.EventService.UpdateEvent:output_type -> event.UpdateEventResponse
	6,  // 13: event.EventService.DeleteEvent:output_type -> event.DeleteEventResponse
	8,  // 14: event.EventService.ListEventsForDay:output_type -> event.ListEventsResponse
	8,  // 15: event.EventService.ListEventsForWeek:output_type -> event.ListEventsResponse
	8,  // 16: event.EventService.ListEventsForMonth:output_type -> event.ListEventsResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_EventService_proto_init() }
func file_EventService_proto_init() {
	if File_EventService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_EventService_proto_rawDesc), len(file_EventService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_EventService_proto_goTypes,
		DependencyIndexes: file_EventService_proto_depIdxs,
		MessageInfos:      file_EventService_proto_msgTypes,
	}.Build()
	File_EventService_proto = out.File
	file_EventService_proto_goTypes = nil
	file_EventService_proto_depIdxs = nil
}
